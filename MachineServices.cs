/***************************************************************************
*                                                                          *
*                      Nestor Lee (15SIS030Y / 1501044)                    *
*                        ICT 4001 - Capstone Project                       *
*                    Cryptocurrency Mining Malware Detector                *
*                    Singapore Institute of Technology (SIT)               * 
*          neslee92@gmail.com / 15SIS030Y@SIT.SingaporeTech.edu.sg         *
*                                                                          *
****************************************************************************/

/*
 * 
 *  Filename:   MachineServices.cs 
 *  Purpose:    Class file for the MachineServices object
 *              Program will only contain one such MachineServices object, where it is used to store the statistics of the services running on the machine
 *              
 */


using System.ServiceProcess;

namespace WindowsFormsAppHelloworld
{
    internal class MachineServices
    {
        private int nonDriverRunningServicesCount = 0;
        private int nonDriverStoppedServicesCount = 0;
        private int nonDriverPausedServicesCount = 0;
        private int nonDriverStartPendingServicesCount = 0;
        private int nonDriverStopPendingServicesCount = 0;
        private int nonDriverPausedPendingServicesCount = 0;
        private int nonDriverContinuePendingServicesCount = 0;

        private int driverRunningServicesCount = 0;
        private int driverStoppedServicesCount = 0;
        private int driverPausedServicesCount = 0;
        private int driverStartPendingServicesCount = 0;
        private int driverStopPendingServicesCount = 0;
        private int driverPausedPendingServicesCount = 0;
        private int driverContinuePendingServicesCount = 0;

        private readonly ServiceController[] nonDriverScServices;
        private readonly ServiceController[] driverScServices;

        // Start of Getters for services statistics
        public int GetNonDriverRunningServicesCount()
        {
            return this.nonDriverRunningServicesCount;
        }

        public int GetNonDriverStoppedServicesCount()
        {
            return this.nonDriverStoppedServicesCount;
        }

        public int GetNonDriverPausedServicesCount()
        {
            return this.nonDriverPausedPendingServicesCount;
        }

        public int GetNonDriverStartPendingServicesCount()
        {
            return this.nonDriverStartPendingServicesCount;
        }

        public int GetNonDriverStopPendingServicesCount()
        {
            return this.nonDriverStopPendingServicesCount;
        }

        public int GetNonDriverPausePendingServicesCount()
        {
            return this.nonDriverPausedPendingServicesCount;
        }

        public int GetNonDriverContinuePendingServicesCount()
        {
            return this.nonDriverContinuePendingServicesCount;
        }
        // End of Getters for services statistics


        // Start of Getters for driver level services statistics
        public int GetDriverRunningServicesCount()
        {
            return this.driverRunningServicesCount;
        }

        public int GetDriverStoppedServicesCount()
        {
            return this.driverStoppedServicesCount;
        }

        public int GetDriverPausedServicesCount()
        {
            return this.driverPausedPendingServicesCount;
        }

        public int GetDriverStartPendingServicesCount()
        {
            return this.driverStartPendingServicesCount;
        }

        public int GetDriverStopPendingServicesCount()
        {
            return this.driverStopPendingServicesCount;
        }

        public int GetDriverPausePendingServicesCount()
        {
            return this.driverPausedPendingServicesCount;
        }

        public int GetDriverContinuePendingServicesCount()
        {
            return this.driverContinuePendingServicesCount;
        }
        // End of Getters for driver level services statistics

        public ServiceController[] GetNonDriverScServices()
        {
            return nonDriverScServices;
        }

        public ServiceController[] GetDriverScServices()
        {
            return driverScServices;
        }

        public MachineServices()
        {
            this.nonDriverScServices = ServiceController.GetServices();
            this.driverScServices = ServiceController.GetDevices();

            foreach(ServiceController scTemp in this.nonDriverScServices)
            {
                switch (scTemp.Status)
                {
                    case ServiceControllerStatus.Running:
                        this.nonDriverRunningServicesCount += 1;
                        break;
                    case ServiceControllerStatus.Stopped:
                        this.nonDriverStoppedServicesCount += 1;
                        break;
                    case ServiceControllerStatus.Paused:
                        this.nonDriverPausedServicesCount += 1;
                        break;
                    case ServiceControllerStatus.StartPending:
                        this.nonDriverStartPendingServicesCount += 1;
                        break;
                    case ServiceControllerStatus.StopPending:
                        this.nonDriverStopPendingServicesCount += 1;
                        break;
                    case ServiceControllerStatus.PausePending:
                        this.nonDriverPausedPendingServicesCount += 1;
                        break;
                    case ServiceControllerStatus.ContinuePending:
                        this.nonDriverContinuePendingServicesCount += 1;
                        break;
                }
            }

            foreach (ServiceController scTemp in this.driverScServices)
            {
                switch (scTemp.Status)
                {
                    case ServiceControllerStatus.Running:
                        this.driverRunningServicesCount += 1;
                        break;
                    case ServiceControllerStatus.Stopped:
                        this.driverStoppedServicesCount += 1;
                        break;
                    case ServiceControllerStatus.Paused:
                        this.driverPausedServicesCount += 1;
                        break;
                    case ServiceControllerStatus.StartPending:
                        this.driverStartPendingServicesCount += 1;
                        break;
                    case ServiceControllerStatus.StopPending:
                        this.driverStopPendingServicesCount += 1;
                        break;
                    case ServiceControllerStatus.PausePending:
                        this.driverPausedPendingServicesCount += 1;
                        break;
                    case ServiceControllerStatus.ContinuePending:
                        this.driverContinuePendingServicesCount += 1;
                        break;
                }
            }
        }
    }
}