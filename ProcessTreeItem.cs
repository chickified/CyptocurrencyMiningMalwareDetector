/***************************************************************************
*                                                                          *
*                      Nestor Lee (15SIS030Y / 1501044)                    *
*                        ICT 4001 - Capstone Project                       *
*                    Cryptocurrency Mining Malware Detector                *
*                    Singapore Institute of Technology (SIT)               * 
*          neslee92@gmail.com / 15SIS030Y@SIT.SingaporeTech.edu.sg         *
*                                                                          *
****************************************************************************/

/*
 * 
 *  Filename:   ProcessTreeItem.cs 
 *  Purpose:    Class file for ProcessTreeItem objects 
 *              ProcessTreeItem objects are used to populate the Process DataGridView in the Process Enumeration tab
 *              
 */


using System.Collections.Generic;
using System.Diagnostics;
using System.Windows.Forms;

namespace WindowsFormsAppHelloworld
{
    internal class ProcessTreeItem
    {
        private string ProcessName;
        private int ProcessId;
        private int TreeLevel;

        public ProcessTreeItem(string modulePath, int level)
        {
            this.ProcessName = modulePath;
            this.TreeLevel = level;
        }

        public ProcessTreeItem(string name, int pid, int level)
        {
            this.ProcessName = name;
            this.ProcessId = pid;
            this.TreeLevel = level;
        }

        public static void PopulateTree(TreeView tree, ICollection<ProcessTreeItem> items)
        {
            tree.Nodes.Clear();
            List<TreeNode> roots = new List<TreeNode>();
            roots.Add(tree.Nodes.Add("Items"));
            foreach (ProcessTreeItem item in items)
            {
                if (item.TreeLevel == roots.Count)
                {
                    roots.Add(roots[roots.Count - 1].LastNode);
                }
                if(item.TreeLevel == 0)
                {
                    roots[item.TreeLevel].Nodes.Add(item.ProcessName + " (" + item.ProcessId + ")");
                }
                else if(item.TreeLevel == 1)
                {
                    roots[item.TreeLevel].Nodes.Add(item.ProcessName);
                }
            }
        }

    }
}